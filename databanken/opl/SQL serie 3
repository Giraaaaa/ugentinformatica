1.Give for each broadcast the full start time (example: 'friday 30/09/2011 23:00', pay attention to case and 24 hour format!), title and genre of the program. Order the list according to its start time. At least expecting columns: 'begintimestamp', 'title', 'genre'.
  SELECT to_char(rb.starttime, 'day DD/MM/YYYY HH24:00') AS begintimestamp, rp.title, rp.genre FROM radiobroadcast rb INNER JOIN radioprogram rp ON rb.radioprogramid = rp.radioprogramid ORDER BY starttime
2.Give, for the artist 'Daan', title and time of broadcast (in a string format, example: '02/10/2011 03:02', 24-hour format!) for each song. If a song was broadcasted multiple times, the time of every broadcast needs to be included. Also include songs that were not broadcasted. Order the songs according to their time of broadcast (missing values first) and their title respectively. At least expecting columns: 'time', 'title'.
  SELECT to_char(pl.timestamp, 'DD/MM/YYYY HH24:MI') as time, title FROM track t LEFT JOIN artist art ON t.artistid = art.artistid LEFT JOIN playlistitem pl on t.trackid = pl.trackid WHERE name LIKE 'Daan' ORDER BY time NULLS FIRST, title
3.Give a list of albums that have been released over the last 10 years. At least expecting column: 'title' and 'year'.
  SELECT title, year FROM album WHERE year >= 2007
4.Give a list of presenters that have their birthday on the day they're doing a show. Give the lastname, firstname and birthdate of the presenter.Also include the name of the program and the time of broadcast. At least expecting columns: 'title', 'starttime', 'birthdate', 'lastname', 'firstname'.
  SELECT ra.title, rb.starttime, pr.birthdate, pr.lastname,pr.firstname FROM presenter pr INNER JOIN radioprogram_presenter rapr on pr.presenterid = rapr.presenterid INNER JOIN radioprogram ra ON rapr.radioprogramid = ra.radioprogramid INNER JOIN radiobroadcast rb ON ra.radioprogramid = rb.radioprogramid WHERE substr(to_char(pr.birthdate,'YYYY-MM-DD') ,6) LIKE to_char(rb.starttime,'MM-DD')
5.Give a list of songs that have been played during the first half hour of a broadcast of the program 'Luyster'. Order the results according to their time of broadcast. At least expecting column: 'title'.
  SELECT t.title FROM track t INNER JOIN playlistitem pl ON t.trackid = pl.trackid INNER JOIN radiobroadcast rb ON pl.radiobroadcastid = rb.radiobroadcastid INNER JOIN radioprogram rp ON rb.radioprogramid = rp.radioprogramid WHERE rp.title LIKE 'Luyster' AND pl.timestamp <= (rb.starttime + (30 ||' minutes')::interval) ORDER BY pl.timestamp
6.Give the title and performer of all the songs that have been broadcasted on a monday between 19:00 (incl.) and 20:00 (excl.). At least expecting columns: 'title', 'name'.
  SELECT title, name FROM playlistitem pl INNER JOIN track t on pl.trackid= t.trackid INNER JOIN artist art ON t.artistid = art.artistid WHERE to_char(pl.timestamp,'day HH24:MI') LIKE 'monday%' AND to_char(pl.timestamp,'day HH24:MI') LIKE '%19:__'
7.Give a list of songs of the artist 'Novastar' that were broadcasted on '05/10/2011'. Include the title of the song and the time of broadcast (in the string format '05/10/2011 09:22', 24-hour format!). At least expecting columns: 'title', 'timestamp'.
  SELECT title,to_char(pl.timestamp, 'DD/MM/YYYY HH24:MI') AS timestamp FROM playlistitem pl INNER JOIN track t ON pl.trackid = t.trackid INNER JOIN artist art ON t.artistid = art.artistid WHERE to_char(pl.timestamp, 'DD/MM/YYYY HH24:MI') LIKE '05/10/2011%' AND art.name LIKE 'Novastar'
