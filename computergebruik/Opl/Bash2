== Palindroom ==
# Refactoren is wel nog beetje nodig. 
# something something spaghetti code...

#!/bin/bash
string="$2"
index="0"
counter=${#string}
match=""
if [ "$1" == "omgekeerd" ]
then
        echo "$2" | rev | tr "ATGC" "TACG"
elif [ "$1" == "langstePalindroom" ]
then
        while [ "$index" -lt ${#string} ]
        do
                while [ "$counter" -gt "0" ]
                do
                        if [ ${string:$index:$counter} = $(bash "$0" "omgekeerd" "${string:$index:$counter}") ]
                        then
                                match=${string:$index:$counter}
                                if [ ${#match} -gt ${#longestmatch} ]
                                then
                                        longestmatch=$match
                                fi
                        fi
                        counter=$(($counter - 1))
                done
                index=$(($index + 1))
                counter=$((${#string} - $index))
        done
        echo $longestmatch
else
        echo "Ongeldige functie" 1>&2
        exit 1
fi

--Alternatieve versie, met minder lussen en if's, sneller op dodona (dubbel)--
    omgekeerd(){
        echo "$1" | rev | tr ACTG TGAC
        }

    palindroom() {
        string="$1"
        index=0
        length=${#string}
        stringLength=${#string}
        match=""
        longestmatch=""

        while [[ "$index" -lt ${#string} ]]
            do
                while [ "$length" -gt ${#longestmatch} ]
                do
                    if [ ${string:$index:$length} = $( omgekeerd "${string:$index:$length}") ]
                    then
                        longestmatch=${string:$index:$length}
                        maxLength=${#longestmatch}
                    fi
                    ((length --))
                done
                ((index++))
                ((length = stringLength - index))
            done
        echo $longestmatch
    }

    if [ $1 = 'omgekeerd' ]
        then
        omgekeerd $2
    elif [ $1 = 'langstePalindroom' ]
        then
        palindroom $2
    else
        echo 'Ongeldige functie' 1>&2
        exit 1
    fi
== De schat van Fenn ==
stop=$1
dir=$2
nextFile=$3
line=$4

cd $dir
while [[ "$lastWord" != "$stop" ]]
do
    file=$nextFile
    sentence="${sentence} ${lastWord}"
    lastWord=$(sed -n ${line}p $file| cut -d " " -f1)
    nextFile=$(sed -n ${line}p $file| cut -d " " -f2)
    line=$(sed -n ${line}p $file| cut -d " " -f3)
done
echo "$sentence" | xargs

Repogen (git generator) mannekes wat een zooi was dat, miss is refactoren mogelijk maar idk

#! /bin/bash
i=0
merge=0
naam=''
amount=3
while getopts ":c:b:m" opt; do
        case "$opt" in
        c )     if [ $OPTARG !=  3 ]
                then
                        amount=$OPTARG
                fi
                ;;
        b ) naam=$OPTARG
            ((merge++))
                ;;
        m ) ((merge++))
                ;;
        \? ) echo "Syntaxis: repogen [-b <string>] [-c <integer>] [-m] dirname" 1>&2
                exit 1
        esac
done
shift $((OPTIND -1))
if [ $# -eq 1 ]
then

        if [ -d $1 ]
        then
                echo "repogen: bestandsnaam bestaat reeds" 1>&2
                exit 2
        else
                git init $1 &> /dev/null
                cd $1
                touch README.md
                git add README.md &> /dev/null
                git commit -m "initial commit" &> /dev/null
                if [[ ! -z $naam ]]
                then
                        git checkout -b $naam &> /dev/null
                fi
                while (( i < $amount )) ; do
                        wget whatthecommit.com -q
                        mesg=$(cat index.html | sed '/<p>.*/!d' | sed 's/<p>//')
                        ((i++))
                        echo "$i) $mesg" >> README.md
                        git commit -a -m "$mesg" &> /dev/null
                        rm index.html
                        done
                if [ $merge -eq 2 ] ; then
                        git checkout master &> /dev/null
                        git merge $naam &> /dev/null
                fi
        fi
else
echo "Syntaxis: repogen [-b <string>] [-c <integer>] [-m] dirname" 1>&2
exit 1
fi
exit 0

